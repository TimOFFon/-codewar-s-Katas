/*
*https://www.codewars.com/kata/572df796914b5ba27c000c90/train/javascript
* Training JS #25: methods of arrayObject---reverse() and sort()
 * 
 * conditions1: according to the number of elements(in ascending order)
 *  for example:
 * sortIt([1,1,1,2,2,3]) should return [3,2,2,1,1,1]
 * because [1,1,1,2,2,3] has one 3, two 2 and three 1
 * 
 * conditions2: If the same number of elements, according to the number
 *  values(in descending order) for example:
 * sortIt([1,1,1,2,2,2,3,3,3]) should return [3,3,3,2,2,2,1,1,1]
 * because number of 3,2 and 1 both are three, then according to 3>2>1
 * 
 * Comprehensive two conditions should be like this:
 * sortIt([1,2,3,4,4,5,5,6,6]) should return [3,2,1,6,6,5,5,4,4]
*/

// let arr41 = [1,1,1,2,2,2,2,3,5,6]; // [3,2,2,1,1,1]
// let arr42 = [1,1,1,2,2,2,3,3,3]; // [3,3,3,2,2,2,1,1,1]
// let arr43 = [1,2,3,4,4,5,5,6,6]; //  [3,2,1,6,6,5,5,4,4]

let arr1 = [14,14,17,5,7,17,13,5,7,4,14,11,5,11,13,14,17,5,5,14,11,5,13,11,11,5,13];

function createObjForSort(arr) {
    let workArr = [];
    let resultArr = [];
    for(let i = 0; i < arr.length; i++) {
        let element = arr[i];
        let arrNumbers = arr.filter(item => item === element);
        workArr.push({name: element, value: arrNumbers.length});
    };
    workArr.sort((a, b) => a.value - b.value || b.name - a.name);
    workArr.forEach(element => {
        resultArr.push(element.name);
    })
    return resultArr;
};

console.log(createObjForSort(arr1));
